import{_ as a,o as e,c as s,d as n}from"./app-HBA039kk.js";const h="/assets/jmm-ScoXCmW1.png",r={},t=n('<h1 id="java内存模型" tabindex="-1"><a class="header-anchor" href="#java内存模型"><span>Java内存模型</span></a></h1><p>JVM内存模型如下图所示：</p><p><img src="'+h+'" alt=""></p><h2 id="程序计数器" tabindex="-1"><a class="header-anchor" href="#程序计数器"><span>程序计数器</span></a></h2><p>程序计数器（Program Counter Register），线程私有，用于指示下一条要执行的指令地址。</p><h2 id="java虚拟机栈" tabindex="-1"><a class="header-anchor" href="#java虚拟机栈"><span>Java虚拟机栈</span></a></h2><p>Java虚拟机栈（Java Virtual Machine Stacks），线程私有，用于存放Java方法的局部变量（基本类型数据，对象引用等）、操作数栈、动态链接、方法出口等信息。</p><h2 id="本地方法栈" tabindex="-1"><a class="header-anchor" href="#本地方法栈"><span>本地方法栈</span></a></h2><p>本地方法栈（Native Method Stacks），线程私有，类似于Java虚拟机栈，用于支持调用本地方法。</p><h2 id="java堆" tabindex="-1"><a class="header-anchor" href="#java堆"><span>Java堆</span></a></h2><p>Java堆（Java Heap），属于线程共享区域，用于存放Java对象实例。</p><h2 id="方法区" tabindex="-1"><a class="header-anchor" href="#方法区"><span>方法区</span></a></h2><p>方法区（Method Area），属于线程共享区域，用于存放类信息、常量、静态变量等信息。</p><h2 id="运行时常量池" tabindex="-1"><a class="header-anchor" href="#运行时常量池"><span>运行时常量池</span></a></h2><p>运行时常量池（Runtime Constant Pool），属于方法区的一部分，存放编译期生成的字面量和符号引用。</p><h2 id="直接内存" tabindex="-1"><a class="header-anchor" href="#直接内存"><span>直接内存</span></a></h2><p>直接内存（Direct Memory），不属于Java虚拟机规范中的一部分，通过调用本地方法直接分配的内存。</p>',17),p=[t];function c(o,d){return e(),s("div",null,p)}const v=a(r,[["render",c],["__file","Java内存模型.html.vue"]]);export{v as default};
