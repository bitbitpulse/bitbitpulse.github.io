const t=JSON.parse('{"key":"v-f384bf80","path":"/posts/java/springcloud/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%85%A8%E5%B1%80%E5%94%AF%E4%B8%80ID%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88.html","title":"分布式系统中全局唯一ID实现方案","lang":"zh-CN","frontmatter":{"sidebar":"auto","description":"分布式系统中全局唯一ID实现方案 UUID 优点： 本地生成，无需网络 缺点： 32位16进制字符串，占用存储空间 基于MAC地址生成UUID，可能造成信息泄露 UUID的无序性对数据库索引不友好 数据库自增主键 提示 MySQL相关文档：https://dev.mysql.com/doc/refman/8.0/en/replication-optio...","head":[["meta",{"property":"og:url","content":"https://bitbitpulse.github.io/posts/java/springcloud/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%85%A8%E5%B1%80%E5%94%AF%E4%B8%80ID%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88.html"}],["meta",{"property":"og:site_name","content":"Bitbitpulse"}],["meta",{"property":"og:title","content":"分布式系统中全局唯一ID实现方案"}],["meta",{"property":"og:description","content":"分布式系统中全局唯一ID实现方案 UUID 优点： 本地生成，无需网络 缺点： 32位16进制字符串，占用存储空间 基于MAC地址生成UUID，可能造成信息泄露 UUID的无序性对数据库索引不友好 数据库自增主键 提示 MySQL相关文档：https://dev.mysql.com/doc/refman/8.0/en/replication-optio..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分布式系统中全局唯一ID实现方案\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"UUID","slug":"uuid","link":"#uuid","children":[]},{"level":2,"title":"数据库自增主键","slug":"数据库自增主键","link":"#数据库自增主键","children":[]},{"level":2,"title":"Redis递增命令","slug":"redis递增命令","link":"#redis递增命令","children":[]},{"level":2,"title":"雪花算法Snowflake","slug":"雪花算法snowflake","link":"#雪花算法snowflake","children":[]}],"git":{},"filePathRelative":"posts/java/springcloud/分布式系统中全局唯一ID实现方案.md","autoDesc":true}');export{t as data};
