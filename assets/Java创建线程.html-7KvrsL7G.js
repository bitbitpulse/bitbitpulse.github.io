const e=JSON.parse('{"key":"v-5e884b20","path":"/posts/java/se/concurrent/Java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B.html","title":"Java创建线程","lang":"zh-CN","frontmatter":{"sidebar":"auto","description":"Java创建线程 继承Thread类 1.继承Thread类，重写run方法 2.创建Thread，启动线程 实现Runnable接口 1.实现Runnable接口，重写run方法 2.创建Thread，将Runnable实现类对象作为参数传递进去 也可以使用匿名内部类的方式创建Runnable对象 Runnable是函数式接口，也可以使用lambda...","head":[["meta",{"property":"og:url","content":"https://bitbitpulse.github.io/posts/java/se/concurrent/Java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"Bitbitpulse"}],["meta",{"property":"og:title","content":"Java创建线程"}],["meta",{"property":"og:description","content":"Java创建线程 继承Thread类 1.继承Thread类，重写run方法 2.创建Thread，启动线程 实现Runnable接口 1.实现Runnable接口，重写run方法 2.创建Thread，将Runnable实现类对象作为参数传递进去 也可以使用匿名内部类的方式创建Runnable对象 Runnable是函数式接口，也可以使用lambda..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java创建线程\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"继承Thread类","slug":"继承thread类","link":"#继承thread类","children":[]},{"level":2,"title":"实现Runnable接口","slug":"实现runnable接口","link":"#实现runnable接口","children":[]},{"level":2,"title":"实现Callable<V>接口","slug":"实现callable-v-接口","link":"#实现callable-v-接口","children":[]},{"level":2,"title":"线程池","slug":"线程池","link":"#线程池","children":[{"level":3,"title":"线程池核心API","slug":"线程池核心api","link":"#线程池核心api","children":[{"level":4,"title":"Executor","slug":"executor","link":"#executor","children":[]},{"level":4,"title":"ExecutorService","slug":"executorservice","link":"#executorservice","children":[]},{"level":4,"title":"AbstractExecutorService","slug":"abstractexecutorservice","link":"#abstractexecutorservice","children":[]},{"level":4,"title":"ThreadPoolExecutor","slug":"threadpoolexecutor","link":"#threadpoolexecutor","children":[]},{"level":4,"title":"ScheduledExecutorService","slug":"scheduledexecutorservice","link":"#scheduledexecutorservice","children":[]},{"level":4,"title":"ScheduledThreadPoolExecutor","slug":"scheduledthreadpoolexecutor","link":"#scheduledthreadpoolexecutor","children":[]}]},{"level":3,"title":"Executors工具类","slug":"executors工具类","link":"#executors工具类","children":[]},{"level":3,"title":"使用ThreadPoolExecutor创建线程池","slug":"使用threadpoolexecutor创建线程池","link":"#使用threadpoolexecutor创建线程池","children":[]},{"level":3,"title":"使用ScheduledThreadPoolExecutor创建线程池","slug":"使用scheduledthreadpoolexecutor创建线程池","link":"#使用scheduledthreadpoolexecutor创建线程池","children":[]},{"level":3,"title":"线程池线程工厂","slug":"线程池线程工厂","link":"#线程池线程工厂","children":[]},{"level":3,"title":"线程池工作队列","slug":"线程池工作队列","link":"#线程池工作队列","children":[]},{"level":3,"title":"线程池拒绝策略","slug":"线程池拒绝策略","link":"#线程池拒绝策略","children":[]},{"level":3,"title":"线程池的状态与关闭","slug":"线程池的状态与关闭","link":"#线程池的状态与关闭","children":[]}]},{"level":2,"title":"Fork-Join模式","slug":"fork-join模式","link":"#fork-join模式","children":[]},{"level":2,"title":"CompletableFuture","slug":"completablefuture","link":"#completablefuture","children":[{"level":3,"title":"获取CompletableFuture实例","slug":"获取completablefuture实例","link":"#获取completablefuture实例","children":[]},{"level":3,"title":"串行执行任务","slug":"串行执行任务","link":"#串行执行任务","children":[]},{"level":3,"title":"合并任务","slug":"合并任务","link":"#合并任务","children":[]},{"level":3,"title":"处理异常","slug":"处理异常","link":"#处理异常","children":[]},{"level":3,"title":"获取结果","slug":"获取结果","link":"#获取结果","children":[]},{"level":3,"title":"其它API","slug":"其它api","link":"#其它api","children":[]}]}],"git":{},"filePathRelative":"posts/java/se/concurrent/Java创建线程.md","autoDesc":true}');export{e as data};
