const t=JSON.parse('{"key":"v-10b103d3","path":"/posts/coder/design-patterns/structural/%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F.html","title":"外观模式","lang":"zh-CN","frontmatter":{"sidebar":"auto","description":"外观模式 外观模式，也称为门面模式（Facade Pattern），是一种结构型模式。提供1个统一的接口，供客户端访问子系统中的一组接口。隐藏了系统的复杂性，客户端只需要与Facade接口进行交互。 代码实现 以家庭影院为例：家庭影院中，有音响、灯光控制器、投影仪，如果要观看电影，需要依次进行一系列固定的操作，同样，如果要结束观看，也需要进行一系列固定...","head":[["meta",{"property":"og:url","content":"https://bitbitpulse.github.io/posts/coder/design-patterns/structural/%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Bitbitpulse"}],["meta",{"property":"og:title","content":"外观模式"}],["meta",{"property":"og:description","content":"外观模式 外观模式，也称为门面模式（Facade Pattern），是一种结构型模式。提供1个统一的接口，供客户端访问子系统中的一组接口。隐藏了系统的复杂性，客户端只需要与Facade接口进行交互。 代码实现 以家庭影院为例：家庭影院中，有音响、灯光控制器、投影仪，如果要观看电影，需要依次进行一系列固定的操作，同样，如果要结束观看，也需要进行一系列固定..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"外观模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":2,"title":"使用外观类","slug":"使用外观类","link":"#使用外观类","children":[]}],"git":{},"filePathRelative":"posts/coder/design-patterns/structural/外观模式.md","autoDesc":true}');export{t as data};
