const e=JSON.parse('{"key":"v-81088c80","path":"/posts/java/springframework/Spring%20AOP%E7%BC%96%E7%A8%8B.html","title":"Spring AOP编程","lang":"zh-CN","frontmatter":{"sidebar":"auto","description":"Spring AOP编程 版本信息 Java 17 Spring 6.1.4 AOP核心概念 Spring AOP（Aspect-Oriented Programming，面向切面编程），是Spring的一个核心功能。 AOP核心概念： Aspect，切面，在Spring中，用1个Java类表示，在其中定义1个或多个通知方法 Join point，连接...","head":[["meta",{"property":"og:url","content":"https://bitbitpulse.github.io/posts/java/springframework/Spring%20AOP%E7%BC%96%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"Bitbitpulse"}],["meta",{"property":"og:title","content":"Spring AOP编程"}],["meta",{"property":"og:description","content":"Spring AOP编程 版本信息 Java 17 Spring 6.1.4 AOP核心概念 Spring AOP（Aspect-Oriented Programming，面向切面编程），是Spring的一个核心功能。 AOP核心概念： Aspect，切面，在Spring中，用1个Java类表示，在其中定义1个或多个通知方法 Join point，连接..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring AOP编程\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"AOP核心概念","slug":"aop核心概念","link":"#aop核心概念","children":[]},{"level":2,"title":"AOP代理","slug":"aop代理","link":"#aop代理","children":[]},{"level":2,"title":"依赖","slug":"依赖","link":"#依赖","children":[]},{"level":2,"title":"基于XML的AOP","slug":"基于xml的aop","link":"#基于xml的aop","children":[{"level":3,"title":"1.导入aop命名空间","slug":"_1-导入aop命名空间","link":"#_1-导入aop命名空间","children":[]},{"level":3,"title":"2.定义Aspect类和Advice方法","slug":"_2-定义aspect类和advice方法","link":"#_2-定义aspect类和advice方法","children":[]},{"level":3,"title":"3.配置AOP","slug":"_3-配置aop","link":"#_3-配置aop","children":[]},{"level":3,"title":"4.加载xml配置文件","slug":"_4-加载xml配置文件","link":"#_4-加载xml配置文件","children":[]}]},{"level":2,"title":"基于注解的AOP","slug":"基于注解的aop","link":"#基于注解的aop","children":[{"level":3,"title":"1.在Spring中启用AspectJ","slug":"_1-在spring中启用aspectj","link":"#_1-在spring中启用aspectj","children":[]},{"level":3,"title":"2.定义Aspect类和Advice方法","slug":"_2-定义aspect类和advice方法-1","link":"#_2-定义aspect类和advice方法-1","children":[]},{"level":3,"title":"3.加载Java配置类","slug":"_3-加载java配置类","link":"#_3-加载java配置类","children":[]}]},{"level":2,"title":"Pointcut切点","slug":"pointcut切点","link":"#pointcut切点","children":[{"level":3,"title":"定义Pointcut","slug":"定义pointcut","link":"#定义pointcut","children":[]},{"level":3,"title":"Pointcut表达式","slug":"pointcut表达式","link":"#pointcut表达式","children":[]},{"level":3,"title":"Pointcut最佳实践","slug":"pointcut最佳实践","link":"#pointcut最佳实践","children":[]}]},{"level":2,"title":"Advice方法参数","slug":"advice方法参数","link":"#advice方法参数","children":[{"level":3,"title":"传递目标方法参数到Advice方法","slug":"传递目标方法参数到advice方法","link":"#传递目标方法参数到advice方法","children":[]},{"level":3,"title":"传递目标方法返回值到Advice方法","slug":"传递目标方法返回值到advice方法","link":"#传递目标方法返回值到advice方法","children":[]},{"level":3,"title":"传递目标方法抛出的异常对象到Advice方法","slug":"传递目标方法抛出的异常对象到advice方法","link":"#传递目标方法抛出的异常对象到advice方法","children":[]}]}],"git":{},"filePathRelative":"posts/java/springframework/Spring AOP编程.md","autoDesc":true}');export{e as data};
