import{_ as n,o as a,c as s,d as t}from"./app-HBA039kk.js";const p="/assets/20240207132532-nnwa-WgW.png",e="/assets/20240208123914-XMSp2KRW.png",o={},c=t(`<h1 id="spring-cloud-alibaba-nacos注册中心" tabindex="-1"><a class="header-anchor" href="#spring-cloud-alibaba-nacos注册中心"><span>Spring Cloud Alibaba Nacos注册中心</span></a></h1><p>参考：</p><ul><li>https://sca.aliyun.com/zh-cn/docs/next/user-guide/nacos/quick-start</li><li>https://sca.aliyun.com/zh-cn/docs/next/user-guide/nacos/advanced-guide</li><li>https://nacos.io/docs/latest/what-is-nacos/</li></ul><p>版本信息：</p><ul><li>nacos 2.2.3</li><li>Spring Cloud Alibaba 2022.0.0.0</li></ul><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始"><span>快速开始</span></a></h2><h3 id="_1-添加spring-cloud-starter-alibaba-nacos-discovery依赖" tabindex="-1"><a class="header-anchor" href="#_1-添加spring-cloud-starter-alibaba-nacos-discovery依赖"><span>1.添加<code>spring-cloud-starter-alibaba-nacos-discovery</code>依赖</span></a></h3><div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="_2-配置nacos" tabindex="-1"><a class="header-anchor" href="#_2-配置nacos"><span>2.配置Nacos</span></a></h3><p>在配置文件中配置Nacos注册中心地址，如果开启了鉴权，需要配置用户名和密码</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">server.port</span><span class="token punctuation">=</span><span class="token value attr-value">9001</span>
<span class="token key attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token value attr-value">nacos-provider-a</span>

<span class="token key attr-name">spring.cloud.nacos.server-addr</span><span class="token punctuation">=</span><span class="token value attr-value">127.0.0.1:8848</span>
<span class="token key attr-name">spring.cloud.nacos.username</span><span class="token punctuation">=</span><span class="token value attr-value">nacos</span>
<span class="token key attr-name">spring.cloud.nacos.password</span><span class="token punctuation">=</span><span class="token value attr-value">nacos</span>

<span class="token key attr-name">spring.cloud.nacos.discovery.server-addr</span><span class="token punctuation">=</span><span class="token value attr-value">\${spring.cloud.nacos.server-addr}</span>
<span class="token key attr-name">spring.cloud.nacos.discovery.username</span><span class="token punctuation">=</span><span class="token value attr-value">\${spring.cloud.nacos.username}</span>
<span class="token key attr-name">spring.cloud.nacos.discovery.password</span><span class="token punctuation">=</span><span class="token value attr-value">\${spring.cloud.nacos.password}</span>
</code></pre></div><h3 id="_3-使用注解-enablediscoveryclient启用服务发现" tabindex="-1"><a class="header-anchor" href="#_3-使用注解-enablediscoveryclient启用服务发现"><span>3.使用注解<code>@EnableDiscoveryClient</code>启用服务发现</span></a></h3><blockquote><p>可选，添加依赖后自动启用服务发现</p></blockquote><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableDiscoveryClient</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NacosProviderAApp</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    	<span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">NacosProviderAApp</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>启动应用，可以在Nacos控制台的服务列表中看到，注册成功</p><p><img src="`+p+`" alt=""></p><h3 id="_4-服务发现" tabindex="-1"><a class="header-anchor" href="#_4-服务发现"><span>4.服务发现</span></a></h3><p>使用<code>@EnableDiscoveryClient</code>启用服务发现后，自动注入<code>DiscoveryClient</code>类型的Bean，可跟注册中心进行通信，例如查询服务注册信息。</p><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/consumer-a&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span> <span class="token keyword">private</span> <span class="token class-name">DiscoveryClient</span> discoveryClient<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/instances&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">instances</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> services <span class="token operator">=</span> discoveryClient<span class="token punctuation">.</span><span class="token function">getServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> serviceId <span class="token operator">:</span> services<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;服务: %s\\n&quot;</span><span class="token punctuation">,</span> serviceId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServiceInstance</span><span class="token punctuation">&gt;</span></span> instances <span class="token operator">=</span> discoveryClient<span class="token punctuation">.</span><span class="token function">getInstances</span><span class="token punctuation">(</span>serviceId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">ServiceInstance</span> instance <span class="token operator">:</span> instances<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;\\t实例: id=%s %s:%s\\n&quot;</span><span class="token punctuation">,</span> instance<span class="token punctuation">.</span><span class="token function">getInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> instance<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> instance<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>启动应用，访问 http://localhost:9001/provider-a/instances</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>服务: nacos-provider-a
	实例: id=null 169.254.135.41:9001
服务: nacos-consumer-a
	实例: id=null 169.254.135.41:9000
</code></pre></div><h3 id="_5-调用远程服务" tabindex="-1"><a class="header-anchor" href="#_5-调用远程服务"><span>5.调用远程服务</span></a></h3><p>在服务提供者应用中，定义一个接口，供服务消费者调用</p><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/provider-a&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;hello, %s !!!&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>在服务消费者应用中，手动注入一个<code>RestTemplate</code>类型的Bean，用来发送HTTP请求</p><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestTemplateConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RestTemplate</span> <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>然后定义1个接口，使用<code>DiscoveryClient</code>查询远程服务的IP和端口，用<code>RestTemplate</code>发送HTTP请求</p><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/consumer-a&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span> <span class="token keyword">private</span> <span class="token class-name">DiscoveryClient</span> discoveryClient<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Resource</span> <span class="token keyword">private</span> <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> serviceId <span class="token operator">=</span> <span class="token string">&quot;nacos-provider-a&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">ServiceInstance</span> instance <span class="token operator">=</span> discoveryClient<span class="token punctuation">.</span><span class="token function">getInstances</span><span class="token punctuation">(</span>serviceId<span class="token punctuation">)</span>
                                                  <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                                  <span class="token punctuation">.</span><span class="token function">findAny</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                                  <span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;服务&quot;</span> <span class="token operator">+</span> serviceId <span class="token operator">+</span> <span class="token string">&quot;不可用&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">&quot;http://{host}:{port}/provider-a/hello?name={name}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> 
                                         instance<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> instance<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><p>启动应用，访问 http://localhost:9000/consumer-a/hello?name=tom</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>hello, tom !!!
</code></pre></div><h2 id="集成loadbalancer" tabindex="-1"><a class="header-anchor" href="#集成loadbalancer"><span>集成LoadBalancer</span></a></h2><h3 id="_1-添加spring-cloud-starter-loadbalancer依赖" tabindex="-1"><a class="header-anchor" href="#_1-添加spring-cloud-starter-loadbalancer依赖"><span>1.添加<code>spring-cloud-starter-loadbalancer</code>依赖</span></a></h3><div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-loadbalancer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="_2-在配置中启用nacos负载均衡" tabindex="-1"><a class="header-anchor" href="#_2-在配置中启用nacos负载均衡"><span>2.在配置中启用Nacos负载均衡</span></a></h3><div class="language-properties" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">spring.cloud.loadbalancer.enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token key attr-name">spring.cloud.loadbalancer.nacos.enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
</code></pre></div><h3 id="_3-使用-loadbalanced标记resttemplate" tabindex="-1"><a class="header-anchor" href="#_3-使用-loadbalanced标记resttemplate"><span>3.使用<code>@LoadBalanced</code>标记<code>RestTemplate</code></span></a></h3><blockquote><p>如果使用OpenFeign，<code>FeignClient</code>默认已集成负载均衡功能</p></blockquote><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestTemplateConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@LoadBalanced</span>
    <span class="token keyword">public</span> <span class="token class-name">RestTemplate</span> <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="验证" tabindex="-1"><a class="header-anchor" href="#验证"><span>验证</span></a></h3><p>在服务提供者应用中，定义接口，返回当前实例的端口号</p><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/provider-a&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${server.port}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> port<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/port&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">port</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;port: %s&quot;</span><span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>启动服务提供者应用的2个实例：分别使用JVM参数<code>-Dserver.port=9001</code>和<code>-Dserver.port=9002</code>启动</p><p>在服务消费者中，使用<code>RestTemplate</code>发送HTTP请求，使用服务ID代替IP和端口</p><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/consumer-a&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>
	<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/port&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">port</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">&quot;http://{serviceId}/provider-a/port&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;nacos-provider-a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>启动应用，请求 http://localhost:9000/consumer-a/port，可以发现，客户端负载均衡生效。</p><h2 id="权重" tabindex="-1"><a class="header-anchor" href="#权重"><span>权重</span></a></h2><p>指定服务提供者实例的权重：配合负载均衡使用，权重越大，负载的流量越大。默认1</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">spring.cloud.nacos.discovery.weight</span><span class="token punctuation">=</span><span class="token value attr-value">1</span>
</code></pre></div><h2 id="临时实例和持久实例" tabindex="-1"><a class="header-anchor" href="#临时实例和持久实例"><span>临时实例和持久实例</span></a></h2><p>服务实例注册到Nacos时，默认为临时实例，服务退出时，自动从Nacos删除。</p><p>设置为false表示注册为持久实例</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">spring.cloud.nacos.discovery.ephemeral</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
</code></pre></div><p>持久实例即使退出，也不会从Nacos删除，必须手动调用OpenAPI的 /nacos/v2/ns/instance 端点注销实例</p><p><img src="`+e+`" alt=""></p><p>注销实例</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>localhost:8848/nacos/v2/ns/instance?namespaceId=public&amp;groupName=DEFAULT_GROUP&amp;serviceName=nacos-consumer-a&amp;ip=169.254.135.41&amp;port=10000&amp;clusterName=clusterName&amp;accessToken=&lt;ACCESS_TOKEN&gt;
</code></pre></div><h2 id="使用命名空间和分组" tabindex="-1"><a class="header-anchor" href="#使用命名空间和分组"><span>使用命名空间和分组</span></a></h2><p>指定服务实例命名空间和分组：服务实例将注册到指定的命名空间和分组，当前服务实例从指定的命名空间和分组获取微服务注册信息。</p><blockquote><p>命名空间默认值public，分组默认值DEFAULT_GROUP</p></blockquote><div class="language-properties" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">spring.cloud.nacos.discovery.namespace</span><span class="token punctuation">=</span><span class="token value attr-value">public</span>
<span class="token key attr-name">spring.cloud.nacos.discovery.group</span><span class="token punctuation">=</span><span class="token value attr-value">DEFAULT_GROUP</span>
</code></pre></div><h2 id="使用集群" tabindex="-1"><a class="header-anchor" href="#使用集群"><span>使用集群</span></a></h2><p>指定集群名称，默认DEFAULT</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">spring.cloud.nacos.discovery.cluster-name</span><span class="token punctuation">=</span><span class="token value attr-value">DEFAULT</span>
</code></pre></div><h2 id="支持ipv4和ipv6注册" tabindex="-1"><a class="header-anchor" href="#支持ipv4和ipv6注册"><span>支持IPv4和IPv6注册</span></a></h2><p>默认同时启用IPv4和IPv6，可以配置只启用其中1种</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># IPv4,IPv6</span>
<span class="token key attr-name">spring.cloud.nacos.discovery.ip-type</span><span class="token punctuation">=</span><span class="token value attr-value">IPv4</span>
</code></pre></div><h2 id="其它配置项" tabindex="-1"><a class="header-anchor" href="#其它配置项"><span>其它配置项</span></a></h2><p>其它配置项及其默认值</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># 是否启用服务发现</span>
<span class="token key attr-name">spring.cloud.nacos.discovery.enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token comment"># 服务名</span>
<span class="token key attr-name">spring.cloud.nacos.discovery.service</span><span class="token punctuation">=</span><span class="token value attr-value">\${spring.application.name}</span>
</code></pre></div>`,69),l=[c];function u(i,r){return a(),s("div",null,l)}const d=n(o,[["render",u],["__file","Spring Cloud Alibaba Nacos注册中心.html.vue"]]);export{d as default};
