const e=JSON.parse('{"key":"v-58592210","path":"/posts/java/springframework/Spring%20IoC%E5%AE%B9%E5%99%A8.html","title":"Spring IoC容器","lang":"zh-CN","frontmatter":{"sidebar":"auto","description":"Spring IoC容器 版本信息 Java 17 Spring 6.1.4 Spring IoC(Inversion of Control，控制反转)容器，用于管理应用中的对象和它们之间的依赖关系，亦称作DI(Dependency injection，依赖注入)。 IoC容器根据预先定义的对象依赖关系创建对象，而不是由开发人员通过创建对象构建其依赖关...","head":[["meta",{"property":"og:url","content":"https://bitbitpulse.github.io/posts/java/springframework/Spring%20IoC%E5%AE%B9%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"Bitbitpulse"}],["meta",{"property":"og:title","content":"Spring IoC容器"}],["meta",{"property":"og:description","content":"Spring IoC容器 版本信息 Java 17 Spring 6.1.4 Spring IoC(Inversion of Control，控制反转)容器，用于管理应用中的对象和它们之间的依赖关系，亦称作DI(Dependency injection，依赖注入)。 IoC容器根据预先定义的对象依赖关系创建对象，而不是由开发人员通过创建对象构建其依赖关..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring IoC容器\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"配置元数据","slug":"配置元数据","link":"#配置元数据","children":[{"level":3,"title":"基于xml的配置","slug":"基于xml的配置","link":"#基于xml的配置","children":[]},{"level":3,"title":"基于注解的配置","slug":"基于注解的配置","link":"#基于注解的配置","children":[{"level":4,"title":"在xml配置中开启基于注解的配置","slug":"在xml配置中开启基于注解的配置","link":"#在xml配置中开启基于注解的配置","children":[]},{"level":4,"title":"使用@Autowired注解装配Bean","slug":"使用-autowired注解装配bean","link":"#使用-autowired注解装配bean","children":[]},{"level":4,"title":"其它有用的注解","slug":"其它有用的注解","link":"#其它有用的注解","children":[]}]},{"level":3,"title":"基于Java的配置","slug":"基于java的配置","link":"#基于java的配置","children":[]}]},{"level":2,"title":"BeanDefinition","slug":"beandefinition","link":"#beandefinition","children":[]},{"level":2,"title":"Bean的名称","slug":"bean的名称","link":"#bean的名称","children":[]},{"level":2,"title":"Bean的实例化","slug":"bean的实例化","link":"#bean的实例化","children":[{"level":3,"title":"使用构造函数","slug":"使用构造函数","link":"#使用构造函数","children":[]},{"level":3,"title":"使用静态工厂方法","slug":"使用静态工厂方法","link":"#使用静态工厂方法","children":[]},{"level":3,"title":"使用实例工厂方法","slug":"使用实例工厂方法","link":"#使用实例工厂方法","children":[]}]},{"level":2,"title":"Bean依赖注入","slug":"bean依赖注入","link":"#bean依赖注入","children":[{"level":3,"title":"依赖注入的方式","slug":"依赖注入的方式","link":"#依赖注入的方式","children":[{"level":4,"title":"基于构造器","slug":"基于构造器","link":"#基于构造器","children":[]},{"level":4,"title":"基于setter方法","slug":"基于setter方法","link":"#基于setter方法","children":[]}]},{"level":3,"title":"依赖解析与循环依赖问题","slug":"依赖解析与循环依赖问题","link":"#依赖解析与循环依赖问题","children":[]},{"level":3,"title":"depends-on属性","slug":"depends-on属性","link":"#depends-on属性","children":[]},{"level":3,"title":"懒初始化Bean","slug":"懒初始化bean","link":"#懒初始化bean","children":[]}]},{"level":2,"title":"Bean Scope","slug":"bean-scope","link":"#bean-scope","children":[]},{"level":2,"title":"Bean生命周期回调方法","slug":"bean生命周期回调方法","link":"#bean生命周期回调方法","children":[{"level":3,"title":"初始化回调","slug":"初始化回调","link":"#初始化回调","children":[]},{"level":3,"title":"销毁回调","slug":"销毁回调","link":"#销毁回调","children":[]}]},{"level":2,"title":"自动扫描配置","slug":"自动扫描配置","link":"#自动扫描配置","children":[]},{"level":2,"title":"使用JSR-250标准注解","slug":"使用jsr-250标准注解","link":"#使用jsr-250标准注解","children":[]},{"level":2,"title":"使用JSR-330标准注解","slug":"使用jsr-330标准注解","link":"#使用jsr-330标准注解","children":[]}],"git":{},"filePathRelative":"posts/java/springframework/Spring IoC容器.md","autoDesc":true}');export{e as data};
