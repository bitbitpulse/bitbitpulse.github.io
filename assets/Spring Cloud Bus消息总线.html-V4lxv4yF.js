import{_ as a,o as s,c as n,d as t}from"./app-HBA039kk.js";const p={},e=t(`<h1 id="spring-cloud-bus消息总线" tabindex="-1"><a class="header-anchor" href="#spring-cloud-bus消息总线"><span>Spring Cloud Bus消息总线</span></a></h1><p>参考：</p><ul><li>Spring官网 https://docs.spring.io/spring-cloud-bus/docs/4.0.3/reference/html/</li></ul><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始"><span>快速开始</span></a></h2><p>Spring Cloud Bus会自动声明1个名称为 <em>springCloudBus</em> 的交换机，类型是topic。调用Bus端点的时候，会向该交换器发布消息，所有Bus消费者应用都能接收到消息，然后自动进行配置刷新、配置更新操作。</p><h3 id="_1-添加依赖" tabindex="-1"><a class="header-anchor" href="#_1-添加依赖"><span>1.添加依赖</span></a></h3><p>AMQP消息中间件(RabbitMQ)</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-bus-amqp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Kafka消息中间件</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-bus-kafka<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="_2-配置" tabindex="-1"><a class="header-anchor" href="#_2-配置"><span>2.配置</span></a></h3><ul><li>向外暴露busrefresh,busenv端点</li><li>配置RabbitMQ连接信息</li></ul><div class="language-properties" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">server.port</span><span class="token punctuation">=</span><span class="token value attr-value">9001</span>
<span class="token key attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token value attr-value">bus-publisher</span>

<span class="token comment"># Actuator</span>
<span class="token key attr-name">management.endpoints.web.exposure.include</span><span class="token punctuation">=</span><span class="token value attr-value">busrefresh,busenv</span>

<span class="token comment"># RabbitMQ</span>
<span class="token key attr-name">spring.rabbitmq.host</span><span class="token punctuation">=</span><span class="token value attr-value">localhost</span>
<span class="token key attr-name">spring.rabbitmq.port</span><span class="token punctuation">=</span><span class="token value attr-value">5672</span>
<span class="token key attr-name">spring.rabbitmq.username</span><span class="token punctuation">=</span><span class="token value attr-value">guest</span>
<span class="token key attr-name">spring.rabbitmq.password</span><span class="token punctuation">=</span><span class="token value attr-value">guest</span>
<span class="token key attr-name">spring.rabbitmq.virtual-host</span><span class="token punctuation">=</span><span class="token value attr-value">/</span>
</code></pre></div><h2 id="使用-actuator-busrefresh-端点刷新配置" tabindex="-1"><a class="header-anchor" href="#使用-actuator-busrefresh-端点刷新配置"><span>使用 /actuator/busrefresh 端点刷新配置</span></a></h2><ul><li><p>刷新全部实例</p><p>POST http://localhost:9001/actuator/busrefresh</p></li><li><p>刷新单个微服务的全部实例</p><p>POST http://localhost:9001/actuator/busrefresh/[destination]</p><p>destination值为 <code>\${spring.application.name}</code></p></li><li><p>刷新单个实例</p><p>POST http://localhost:9001/actuator/busrefresh/[destination]</p><p>destination值为 <code>\${spring.application.name}:\${server.port}</code></p></li></ul><h2 id="使用-actuator-busenv-端点更新配置" tabindex="-1"><a class="header-anchor" href="#使用-actuator-busenv-端点更新配置"><span>使用 /actuator/busenv 端点更新配置</span></a></h2><ul><li><p>更新全部实例</p><p>POST http://localhost:9001/actuator/busenv</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;k&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;value&quot;</span><span class="token operator">:</span><span class="token string">&quot;v&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>更新单个微服务的全部实例</p><p>POST http://localhost:9001/actuator/busenv/[destination]</p><p>destination值为 <code>\${spring.application.name}</code></p></li><li><p>更新单个实例</p><p>POST http://localhost:9001/actuator/busenv/[destination]</p><p>destination值为 <code>\${spring.application.name}:\${server.port}</code></p></li></ul>`,17),o=[e];function c(l,u){return s(),n("div",null,o)}const i=a(p,[["render",c],["__file","Spring Cloud Bus消息总线.html.vue"]]);export{i as default};
