const l=JSON.parse('{"key":"v-1fc3071f","path":"/posts/java/se/Java%E6%96%B0%E7%89%B9%E6%80%A7%E6%80%BB%E7%BB%93.html","title":"Java新特性总结","lang":"zh-CN","frontmatter":{"sidebar":"auto","description":"Java新特性总结 参考 Oracle JDK Release Notes 8 接口中的默认方法和静态方法 函数式接口 函数式接口表示有且仅有1个抽象方法的接口。 注意，java.lang.Object中的方法不计入数量。可以存在非抽象的default方法或static方法。 函数式接口用于接收Lambda表达式和方法引用。 定义函数式接口时，推荐用@...","head":[["meta",{"property":"og:url","content":"https://bitbitpulse.github.io/posts/java/se/Java%E6%96%B0%E7%89%B9%E6%80%A7%E6%80%BB%E7%BB%93.html"}],["meta",{"property":"og:site_name","content":"Bitbitpulse"}],["meta",{"property":"og:title","content":"Java新特性总结"}],["meta",{"property":"og:description","content":"Java新特性总结 参考 Oracle JDK Release Notes 8 接口中的默认方法和静态方法 函数式接口 函数式接口表示有且仅有1个抽象方法的接口。 注意，java.lang.Object中的方法不计入数量。可以存在非抽象的default方法或static方法。 函数式接口用于接收Lambda表达式和方法引用。 定义函数式接口时，推荐用@..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java新特性总结\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"8","slug":"_8","link":"#_8","children":[{"level":3,"title":"接口中的默认方法和静态方法","slug":"接口中的默认方法和静态方法","link":"#接口中的默认方法和静态方法","children":[]},{"level":3,"title":"函数式接口","slug":"函数式接口","link":"#函数式接口","children":[]},{"level":3,"title":"Lambda表达式","slug":"lambda表达式","link":"#lambda表达式","children":[]},{"level":3,"title":"方法引用和构造函数引用","slug":"方法引用和构造函数引用","link":"#方法引用和构造函数引用","children":[{"level":4,"title":"方法引用","slug":"方法引用","link":"#方法引用","children":[]},{"level":4,"title":"构造函数引用","slug":"构造函数引用","link":"#构造函数引用","children":[]}]},{"level":3,"title":"Stream API","slug":"stream-api","link":"#stream-api","children":[{"level":4,"title":"中间操作","slug":"中间操作","link":"#中间操作","children":[]},{"level":4,"title":"终端操作","slug":"终端操作","link":"#终端操作","children":[]},{"level":4,"title":"数值流","slug":"数值流","link":"#数值流","children":[]}]},{"level":3,"title":"Optional类","slug":"optional类","link":"#optional类","children":[]},{"level":3,"title":"新日期时间API","slug":"新日期时间api","link":"#新日期时间api","children":[]},{"level":3,"title":"并行数组操作API","slug":"并行数组操作api","link":"#并行数组操作api","children":[]}]},{"level":2,"title":"9","slug":"_9","link":"#_9","children":[{"level":3,"title":"模块化系统","slug":"模块化系统","link":"#模块化系统","children":[]},{"level":3,"title":"JShell","slug":"jshell","link":"#jshell","children":[]},{"level":3,"title":"接口中的私有默认方法和私有静态方法","slug":"接口中的私有默认方法和私有静态方法","link":"#接口中的私有默认方法和私有静态方法","children":[]}]},{"level":2,"title":"10","slug":"_10","link":"#_10","children":[{"level":3,"title":"本地变量类型推断","slug":"本地变量类型推断","link":"#本地变量类型推断","children":[]}]},{"level":2,"title":"11","slug":"_11","link":"#_11","children":[{"level":3,"title":"新的HTTP和WebSocket客户端API","slug":"新的http和websocket客户端api","link":"#新的http和websocket客户端api","children":[]}]},{"level":2,"title":"12","slug":"_12","link":"#_12","children":[]},{"level":2,"title":"13","slug":"_13","link":"#_13","children":[]},{"level":2,"title":"14","slug":"_14","link":"#_14","children":[]},{"level":2,"title":"15","slug":"_15","link":"#_15","children":[]},{"level":2,"title":"16","slug":"_16","link":"#_16","children":[]},{"level":2,"title":"17","slug":"_17","link":"#_17","children":[]},{"level":2,"title":"18","slug":"_18","link":"#_18","children":[]},{"level":2,"title":"19","slug":"_19","link":"#_19","children":[]},{"level":2,"title":"20","slug":"_20","link":"#_20","children":[]},{"level":2,"title":"21","slug":"_21","link":"#_21","children":[]}],"git":{},"filePathRelative":"posts/java/se/Java新特性总结.md","autoDesc":true}');export{l as data};
